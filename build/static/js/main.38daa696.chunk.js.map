{"version":3,"sources":["index.js"],"names":["Tiles","Square","key","handleClickEvent","history","onClick","Winner","winner","show","closeAlert","variant","onClose","dismissible","Heading","checkWinner","choices","winningCombinations","i","sort","a","b","count","length","forEach","value","includes","Board","useState","player","setPlayer","setHistory","filledChoices","setFilledChoices","xChoices","setXChoices","oChoices","setOChoices","setWinner","showWinner","setShowWinner","useEffect","checkRepeat","array","Reset","window","location","reload","PlayerName","playerName","className","toUpperCase","map","index","e","target","innerText","handleClick","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.38daa696.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactDom from 'react-dom'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css'\nconst Tiles = [1,2,3,4,5,6,7,8,9];\nconst Square = ({key,history,handleClickEvent})=>{\n\treturn(\n\t\t<div key={key} onClick={handleClickEvent}></div>\n\t\t)\n\t}\nconst Buttons = ({reset,show})=>{\n\treturn (\n\t\t<>\n\t\t\t<i onClick={reset} className=\"fa fa-refresh\" style=\"font-size:36px;\"></i>\n\t\t</>\n\n\t)\n}\nconst Winner = ({winner,show,closeAlert})=>{\n\treturn(<Alert show={show} variant=\"success\" onClose={closeAlert} dismissible>\n        <Alert.Heading>{winner} Wins the game</Alert.Heading>\n      </Alert>)\n}\nconst checkWinner = (choices)=>{\n\tconst winningCombinations= [\n\t\t[1,2,3],\n\t\t[4,5,6],\n\t\t[7,8,9],\n\t\t[1,4,7],\n\t\t[2,5,8],\n\t\t[3,6,9],\n\t\t[1,5,9],\n\t\t[3,5,7]\n\t];\n\tfor (let i = 0; i < winningCombinations.length; i++) {\n\t\twinningCombinations[i].sort((a,b)=>{return a-b});\n\t\tchoices.sort((a,b)=>{return a-b});\n\t\tlet count = 0;\n\t\tif(choices.length >='3'){\n\t\t\twinningCombinations[i].forEach((value)=>{\n\t\t\t\tif(choices.includes(value)){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t})\n\t\t\tif(count===3){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t  }\n}\n\nconst Board = ()=>{\nconst [player,setPlayer] = useState(\"o\");\nconst [history,setHistory] = useState(0);\nconst [filledChoices,setFilledChoices] = useState([]);\nconst [xChoices,setXChoices] = useState([]);\nconst [oChoices,setOChoices] = useState([]);\nconst [winner,setWinner] = useState('');\nconst [showWinner,setShowWinner] = useState(false);\nuseEffect(()=>{\n\tif(history%2){\n\t\tif(checkWinner(oChoices)){\n\t\t\tsetShowWinner(true);\n\t\t\tsetWinner('O');\n\t\t}\n\t}\n\telse{\n\t\tif(checkWinner(xChoices)){\n\t\t\tsetShowWinner(true);\n\t\t\tsetWinner('X');\n\t   }\n\t}\n})\nfunction handleClick(e,value){\n\tif(!showWinner){\n\t\tif(history%2){\n\t\t\tif(!checkRepeat(filledChoices,value)){\n\t\t\t\tsetPlayer('o');\n\t\t\t\tsetXChoices([...xChoices,value]);\n\t\t\t\tsetHistory(history+1);\n\t\t\t\tsetFilledChoices([...filledChoices,value]);\n\t\t\t\te.target.innerText=player;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(!checkRepeat(filledChoices,value)){\n\t\t\t\tsetPlayer('x');\n\t\t\t\tsetOChoices([...oChoices,value]);\n\t\t\t\tsetHistory(history+1);\n\t\t\t\tsetFilledChoices([...filledChoices,value]);\n\t\t\t\te.target.innerText=player;\n\t\t\t}\n\t\t}\n\t}\n}\nconst checkRepeat = (array,value)=>{\n\treturn array.includes(value);\n}\nconst closeAlert = ()=>{\n\tsetShowWinner(false);\n\tsetWinner('');\n\tsetXChoices([]);\n\tsetXChoices([]);\n}\nconst Reset = ()=>{\n\tconst resetGame = ()=>{\n\t\twindow.location.reload();\n\t}\n\treturn (\n\t\t<>\n\t\t <Button\n\t\t onClick={resetGame}>‚ü≥</Button>\n\t\t</>\n\t)\n}\nconst PlayerName = ({playerName})=>{\n\treturn (\n\t\t<span className=\"text-light\n\t\t\">Player {playerName.toUpperCase()}</span>\n\t)\n}\nconst changeColor = (divs)=>{\n\n}\nreturn (\n\t<>\n\t<Winner winner={winner} show={showWinner} closeAlert={closeAlert}/>\n\t<div className=\"setUp\">\n\t\t<div className=\"info\">\n\t\t\t<Reset show={showWinner}/>\n\t\t\t<PlayerName playerName={player}/>\n\t\t</div>\n\t\t<div className=\"flex-container\">\n\t\t\t{Tiles.map((value,index)=>{\n\t\t\t\treturn <Square key={index} history={history} handleClickEvent={(e,index)=>handleClick(e,value)}/>\n\t\t\t})}\n\t\t</div>\n\t</div>\n\t</>\n)\n}\n\n\nReactDom.render(\n  <Board/>\n  ,\n  document.getElementById('root')\n)"],"sourceRoot":""}